@page "/miners"

<div class="container">
    <h1>Miners</h1>
    <div class="grid">
        <div class="left">
            @foreach (Miner miner in miners)
            {
                <MudCard class="custom-dark-card">
                    <MudCardHeader class="custom-dark-card-header">
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6" class="custom-dark-card-text">Group: @miner.Group </MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent class="custom-dark-card-body">
                        <MudText class="custom-dark-card-text">IP Address: @miner.Ip</MudText>
                        <MudText Style="visibility:hidden">@miner.Id</MudText>
                    </MudCardContent>
                    <MudCardActions>
                        <input type="checkbox" class="custom-control-input" id="@($"checkbox{miner.Id}")" @bind="miner.IsChecked" />
                    </MudCardActions>
                </MudCard>
            }
        </div>
        <div class="right">
            <div class="button-container">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" Size="Size.Large" @onclick="AddMiner">Add New</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Secondary" Size="Size.Large" @onclick="DeleteMiners">Delete</MudButton>
            </div>
        </div>
    </div>
</div>

@if (showAddMinerDialog)
{
    <div class="modal-container">
        <div class="modal">
            <div class="modal-header">
                <h3>Add New Miner</h3>
                <button class="close-button" @onclick="CancelAddMiner">X</button>
            </div>
            <div class="modal-body">
                <div class="input">
                    <p>Miner IP:</p>
                    <MudTextField @bind-Value="newMinerIp" />
                </div>
                <div class="input">
                    <p>Miner Group:</p>
                    <MudTextField @bind-Value="newMinerGroup" />
                </div>

            </div>
            <div class="modal-footer">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" @onclick="SaveMiner">Save</MudButton>
                <MudButton Variant="Variant.Filled" Color="Color.Secondary" @onclick="CancelAddMiner">Cancel</MudButton>
            </div>
        </div>
    </div>
}


@code
{
    List<Miner> miners = new List<Miner>
    {
        new Miner("192.168.0.1", "Haus", 1),
        new Miner("192.168.0.2", "Another Location", 2),
        new Miner("192.168.0.3", "Haus", 3),
        new Miner("192.168.0.4", "Another Location", 4),
        new Miner("192.168.0.5", "Haus", 5),
        new Miner("192.168.0.6", "Another Location", 6),
        new Miner("192.168.0.7", "Haus", 7),
        new Miner("192.168.0.8", "Another Location", 8),
    };

    private bool showAddMinerDialog = false;
    private string newMinerIp = "";
    private string newMinerGroup = "";

    private void AddMiner()
    {
        showAddMinerDialog = true;
    }

    private void SaveMiner()
    {
        // Add a new miner with the provided IP
        miners.Add(new Miner(newMinerIp, newMinerGroup, miners.Count + 1));

        // Close the dialog
        showAddMinerDialog = false;
    }

    private void CancelAddMiner()
    {
        // Close the dialog without saving
        showAddMinerDialog = false;
    }

    private void DeleteMiners()
    {
        var selectedMiners = miners.Where(m => m.IsChecked).ToList();

        foreach (var miner in selectedMiners)
        {
            miners.Remove(miner);
        }
    }

    public class Miner
    {
        public string Ip { get; set; }
        public string Group { get; set; }
        public int Id { get; set; }
        public bool IsChecked { get; set; }

        public Miner(string ip, string group, int id)
        {
            Ip = ip;
            Group = group;
            Id = id;
        }
    }
}


<style>

    <!-- Cards für Miner-->
        .custom-dark-card {
            width: 75%;
            background-color: #2B2930;
            border: solid 2px #EADDFF;
            border-radius: 8px;
            padding: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            margin-bottom: 30px;
        }

        .custom-dark-card-header {
            background-color: #2B2930;
            color: #EADDFF;
            padding: 8px;
            border-top-left-radius: 8px;
            border-top-right-radius: 8px;
        }

        .custom-dark-card-body {
            padding: 10px;
        }

        .custom-dark-card-text {
            color: #EADDFF;
        }


    html, body {
        height: 100%;
    }

    <!-- Css Grid für Aufteilung Links Miner und Rechts Buttons-->
        .grid {
            display: grid;
            grid-template-columns: 1fr 1fr; /* Two columns with equal width */
            gap: 150px;
            min-height: 75vh; /* Set min-height to 100% of viewport height */
        }

        .left {
            overflow-y: auto; /* Enable vertical scrolling for the left column */
            max-height: 75vh; /* Set a maximum height for the left column */
        }

        .right {
            display: flex;
            flex-direction: column; /* Ensure buttons stack vertically */
            align-items: flex-end;
            justify-content: flex-end;
        }

        .container {
            margin-top: -140px;
        }

    h1 {
        margin-bottom: 100px;
    }

    .ipcard {
        margin-bottom: 50px;
    }

    .modal-container {
        display: flex;
        align-items: center;
        justify-content: center;
        position: fixed;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        background: rgba(0, 0, 0, 0.5); /* Semi-transparent background */
        z-index: 1000; /* Ensure the modal is on top */
    }

    .modal {
        background: #211f26;
        color: #FFFFF0;
        border: solid 2px #EADDFF;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
        width: 800px; /* Adjust the width as needed */
        height: 450px;
        display: flex;
        flex-direction: column;
        justify-content: space-between; /* Align content with space between */
    }

    .modal-footer {
        display: flex;
        justify-content: flex-end;
        align-items: flex-end; /* Align items to the flex-end (bottom) */
        margin-top: auto; /* Push the footer to the bottom */
    }

    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
    }

    .close-button {
        background: none;
        border: none;
        cursor: pointer;
        font-size: 16px;
        color: #FFFFF0;
    }

    .modal-body {
        margin-bottom: 20px;
        color: #FFFFF0;
    }

    .mud-input{
        color: #FFFFF0; /* Text color for the input field */
    }

    .input{
        margin: 25px;
    }
</style>
